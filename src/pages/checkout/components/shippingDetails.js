import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Select from "react-select";
function ShippingDetails(setShippingAddress, setShippingMethodStage, setShippingDetailsStage, setAddress, address, address2, setAddress2, city, setCity, province, setProvince, zip, setZip, countryCode, setCountryCode, countriesDataFormated, cancelButton) {
    return (_jsxs("form", Object.assign({ onSubmit: (e) => {
            e.preventDefault();
            setShippingAddress();
            setShippingMethodStage(true);
            setShippingDetailsStage(false);
        } }, { children: [_jsxs("div", Object.assign({ className: "form-group" }, { children: [_jsx("label", Object.assign({ htmlFor: "inputAddress" }, { children: "Address" })), _jsx("input", { required: true, onChange: event => setAddress(event.target.value), value: address, type: "text", className: "form-control", id: "inputAddress", placeholder: "1234 Main St" })] })), _jsxs("div", Object.assign({ className: "form-group" }, { children: [_jsx("label", Object.assign({ htmlFor: "inputAddress2" }, { children: "Address 2" })), _jsx("input", { onChange: event => setAddress2(event.target.value), value: address2, type: "text", className: "form-control", id: "inputAddress2", placeholder: "Apartment, studio, or floor" })] })), _jsxs("div", Object.assign({ className: "form-row" }, { children: [_jsxs("div", Object.assign({ className: "form-group col-6 " }, { children: [_jsx("label", Object.assign({ htmlFor: "inputCity" }, { children: "City" })), _jsx("input", { required: true, onChange: event => setCity(event.target.value), value: city, type: "text", className: "form-control", id: "inputCity" })] })), _jsxs("div", Object.assign({ className: "form-group col-6 " }, { children: [_jsx("label", Object.assign({ htmlFor: "inputState" }, { children: "State" })), _jsx("input", { required: true, onChange: event => setProvince(event.target.value), value: province, id: "inputState", type: "text", className: "form-control" })] }))] })), _jsxs("div", Object.assign({ className: "form-row" }, { children: [_jsxs("div", Object.assign({ className: "form-group col-5" }, { children: [_jsx("label", Object.assign({ htmlFor: "inputZip" }, { children: "Zip" })), _jsx("input", { required: true, onChange: event => setZip(event.target.value), value: zip, type: "text", className: "form-control", id: "inputZip" })] })), _jsxs("div", Object.assign({ className: " col-7" }, { children: [_jsx("label", Object.assign({ htmlFor: "inputCountry" }, { children: "Country" })), _jsx(Select, { rules: { required: true }, value: countryCode, onChange: setCountryCode, styles: {
                                    option: (provided, state) => (Object.assign(Object.assign({}, provided), { color: 'black' })),
                                    input: (provided, state) => (Object.assign(Object.assign({}, provided), { color: 'black' })),
                                    placeholder: (provided, state) => (Object.assign(Object.assign({}, provided), { color: 'black' })),
                                }, options: countriesDataFormated })] }))] })), _jsxs("div", Object.assign({ className: 'd-flex justify-content-between' }, { children: [cancelButton(), _jsx("button", Object.assign({ className: 'my-button small', type: 'submit', disabled: !countryCode.value }, { children: "Continue" }))] }))] })));
}
export default ShippingDetails;
